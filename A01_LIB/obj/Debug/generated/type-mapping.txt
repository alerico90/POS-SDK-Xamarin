aclasdriver/aclasHdqApi = Aclasdriver.AclasHdqApi
  <init>()V = .ctor()
  beep()I = Beep()
  close()I = Close()
  open()I = Open()
  read()[B = Read()
aclasdriver/AclasLcd0 = Aclasdriver.AclasLcd0
  <init>()V = .ctor()
  GetHeight()I = Height
  GetWidth()I = Width
  close()V = Close()
  open()I = Open()
  SetBacklight(I)V = SetBacklight(int)
  SetContrast(I)V = SetContrast(int)
  WriteBitMap(Landroid/graphics/Bitmap;)I = WriteBitMap(Android.Graphics.Bitmap)
  WriteDotMatrix([B)I = WriteDotMatrix(byte[])
  writeMsg([B)V = WriteMsg(byte[])
aclasdriver/aclasMagcardApi = Aclasdriver.AclasMagcardApi
  <init>()V = .ctor()
  beep()I = Beep()
  close()I = Close()
  open()I = Open()
  read([Ljava/lang/String;)I = Read(string[])
aclasdriver/drawer = Aclasdriver.Drawer
  <init>()V = .ctor()
  open()I = Open()
aclasdriver/km3_printer = Aclasdriver.Km3_printer
  <init>()V = .ctor()
  beep()I = Beep()
  close()I = Close()
  open()I = Open()
  read(I)[B = Read(int)
  readstatus()I = Readstatus()
  write([B)I = Write(byte[])
aclasdriver/printer = Aclasdriver.Printer
  <init>()V = .ctor()
  GetDotWidth()I = DotWidth
  IsPaperExist()Z = IsPaperExist
  Close()V = Close()
  Conitnue()I = Conitnue()
  Feed(I)I = Feed(int)
  Open()I = Open()
  Read(I)[B = Read(int)
  SetContrast(I)I = SetContrast(int)
  SetPrintMode(I)I = SetPrintMode(int)
  Stop()I = Stop()
  Write([B)I = Write(byte[])
aclasdriver/rfid = Aclasdriver.Rfid
  <init>()V = .ctor()
  AuthKey(I[B)Z = AuthKey(int, byte[])
  beep()I = Beep()
  close()I = Close()
  open()I = Open()
  ReadCardBlock(I)[B = ReadCardBlock(int)
  ReadCardNo()Ljava/lang/String; = ReadCardNo()
  SetCardPsw(I[B)Z = SetCardPsw(int, byte[])
  WriteCardBlock(I[B)Z = WriteCardBlock(int, byte[])
aclasdriver/SerialPort = Aclasdriver.SerialPort
  <init>(Ljava/io/File;II)V = .ctor(Java.IO.File, int, int)
  mFd = MFd
  mFileInputStream = MFileInputStream
  mFileOutputStream = MFileOutputStream
  TAG = Tag
  getInputStream()Ljava/io/InputStream; = InputStream
  getOutputStream()Ljava/io/OutputStream; = OutputStream
  close()V = Close()
  open(Ljava/lang/String;II)Ljava/io/FileDescriptor; = Open(string, int, int)
aclasdriver/SmartCard = Aclasdriver.SmartCard
  <init>()V = .ctor()
  ApduCommand(IIIII[BI)[B = ApduCommand(int, int, int, int, int, byte[], int)
  Close(I)V = Close(int)
  GetATR(I)[B = GetATR(int)
  GetChallenge8(I)[B = GetChallenge8(int)
  GetResponse(IB)[B = GetResponse(int, sbyte)
  GetState(I)I = GetState(int)
  IsCardRemoved(I)I = IsCardRemoved(int)
  Open(I)I = Open(int)
  Pread(I[BII)I = Pread(int, byte[], int, int)
  Pwrite(I[BII)I = Pwrite(int, byte[], int, int)
  ReadBinary_CUR(IBB)[B = ReadBinary_CUR(int, sbyte, sbyte)
  SelectFile(I[B)[B = SelectFile(int, byte[])
  SendCommand(I[B[B)I = SendCommand(int, byte[], byte[])
  SetCardType(II)I = SetCardType(int, int)
  TestCardReady(I)I = TestCardReady(int)
  VerifyPIN(IB[B)[B = VerifyPIN(int, sbyte, byte[])
aclasdriver/UsbRfid = Aclasdriver.UsbRfid
  <init>()V = .ctor()
  close()I = Close()
  open()I = Open()
  read(I)[B = Read(int)
  write([B)I = Write(byte[])
com/TFHKA/a01_demo/BuildConfig = Com.TFHKA.A01_demo.BuildConfig
  <init>()V = .ctor()
  DEBUG = Debug
com/TFHKA/a01_demo/R = Com.TFHKA.A01_demo.R
  <init>()V = .ctor()
